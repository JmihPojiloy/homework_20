// <auto-generated />
using HW20.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW20.Migrations
{
    [DbContext(typeof(NoteDbContext))]
    [Migration("20230206185439_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HW20.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Pushkin st.",
                            FirstName = "Vasily",
                            Information = "cool man",
                            LastName = "Vasiliev",
                            MiddleName = "Vasilievich",
                            PhoneNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kolotushkin st.",
                            FirstName = "Petr",
                            Information = "good man",
                            LastName = "Petrov",
                            MiddleName = "Petrovich",
                            PhoneNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hohotushkin st.",
                            FirstName = "Sidor",
                            Information = "zaebis man",
                            LastName = "Sidorov",
                            MiddleName = "Sidorovich",
                            PhoneNumber = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
